{"version":3,"sources":["src\\cdk\\cdk-layout.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","layout","core","coercion","rxjs","operators","platform","this","i0","i1","LayoutModule","decorators","type","NgModule","args","mediaQueryStyleNode","mediaQueriesForWebkitCompatibility","Set","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","prototype","query","WEBKIT","createEmptyStyleRule","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","ɵprov","ɵɵdefineInjectable","MediaMatcher_Factory","ɵɵinject","Platform","token","providedIn","Injectable","ctorParameters","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","Subject","ngOnDestroy","next","complete","isMatched","value","_this","splitQueries","coerceArray","some","mediaQuery","_registerQuery","mql","observe","observables","map","observable","stateObservable","combineLatest","concat","pipe","take","skip","debounceTime","breakpointStates","response","breakpoints","forEach","_a","get","output","Observable","observer","handler","run","startWith","takeUntil","set","queries","split","reduce","a1","a2","trim","BreakpointObserver_Factory","NgZone","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/coercion'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/platform')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/layout', ['exports', '@angular/core', '@angular/cdk/coercion', 'rxjs', 'rxjs/operators', '@angular/cdk/platform'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.layout = {}), global.ng.core, global.ng.cdk.coercion, global.rxjs, global.rxjs.operators, global.ng.cdk.platform));\n}(this, (function (exports, i0, coercion, rxjs, operators, i1) { 'use strict';\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var LayoutModule = /** @class */ (function () {\r\n        function LayoutModule() {\r\n        }\r\n        return LayoutModule;\r\n    }());\r\n    LayoutModule.decorators = [\r\n        { type: i0.NgModule, args: [{},] }\r\n    ];\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** Global registry for all dynamically-created, injected media queries. */\r\n    var mediaQueriesForWebkitCompatibility = new Set();\r\n    /** Style tag that holds all of the dynamically-created media queries. */\r\n    var mediaQueryStyleNode;\r\n    /** A utility for calling matchMedia queries. */\r\n    var MediaMatcher = /** @class */ (function () {\r\n        function MediaMatcher(_platform) {\r\n            this._platform = _platform;\r\n            this._matchMedia = this._platform.isBrowser && window.matchMedia ?\r\n                // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\r\n                // call it from a different scope.\r\n                window.matchMedia.bind(window) :\r\n                noopMatchMedia;\r\n        }\r\n        /**\r\n         * Evaluates the given media query and returns the native MediaQueryList from which results\r\n         * can be retrieved.\r\n         * Confirms the layout engine will trigger for the selector query provided and returns the\r\n         * MediaQueryList for the query provided.\r\n         */\r\n        MediaMatcher.prototype.matchMedia = function (query) {\r\n            if (this._platform.WEBKIT) {\r\n                createEmptyStyleRule(query);\r\n            }\r\n            return this._matchMedia(query);\r\n        };\r\n        return MediaMatcher;\r\n    }());\r\n    MediaMatcher.ɵprov = i0.ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(i0.ɵɵinject(i1.Platform)); }, token: MediaMatcher, providedIn: \"root\" });\r\n    MediaMatcher.decorators = [\r\n        { type: i0.Injectable, args: [{ providedIn: 'root' },] }\r\n    ];\r\n    MediaMatcher.ctorParameters = function () { return [\r\n        { type: i1.Platform }\r\n    ]; };\r\n    /**\r\n     * For Webkit engines that only trigger the MediaQueryListListener when\r\n     * there is at least one CSS selector for the respective media query.\r\n     */\r\n    function createEmptyStyleRule(query) {\r\n        if (mediaQueriesForWebkitCompatibility.has(query)) {\r\n            return;\r\n        }\r\n        try {\r\n            if (!mediaQueryStyleNode) {\r\n                mediaQueryStyleNode = document.createElement('style');\r\n                mediaQueryStyleNode.setAttribute('type', 'text/css');\r\n                document.head.appendChild(mediaQueryStyleNode);\r\n            }\r\n            if (mediaQueryStyleNode.sheet) {\r\n                mediaQueryStyleNode.sheet\r\n                    .insertRule(\"@media \" + query + \" {.fx-query-test{ }}\", 0);\r\n                mediaQueriesForWebkitCompatibility.add(query);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    /** No-op matchMedia replacement for non-browser platforms. */\r\n    function noopMatchMedia(query) {\r\n        // Use `as any` here to avoid adding additional necessary properties for\r\n        // the noop matcher.\r\n        return {\r\n            matches: query === 'all' || query === '',\r\n            media: query,\r\n            addListener: function () { },\r\n            removeListener: function () { }\r\n        };\r\n    }\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** Utility for checking the matching state of @media queries. */\r\n    var BreakpointObserver = /** @class */ (function () {\r\n        function BreakpointObserver(_mediaMatcher, _zone) {\r\n            this._mediaMatcher = _mediaMatcher;\r\n            this._zone = _zone;\r\n            /**  A map of all media queries currently being listened for. */\r\n            this._queries = new Map();\r\n            /** A subject for all other observables to takeUntil based on. */\r\n            this._destroySubject = new rxjs.Subject();\r\n        }\r\n        /** Completes the active subject, signalling to all other observables to complete. */\r\n        BreakpointObserver.prototype.ngOnDestroy = function () {\r\n            this._destroySubject.next();\r\n            this._destroySubject.complete();\r\n        };\r\n        /**\r\n         * Whether one or more media queries match the current viewport size.\r\n         * @param value One or more media queries to check.\r\n         * @returns Whether any of the media queries match.\r\n         */\r\n        BreakpointObserver.prototype.isMatched = function (value) {\r\n            var _this = this;\r\n            var queries = splitQueries(coercion.coerceArray(value));\r\n            return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\r\n        };\r\n        /**\r\n         * Gets an observable of results for the given queries that will emit new results for any changes\r\n         * in matching of the given queries.\r\n         * @param value One or more media queries to check.\r\n         * @returns A stream of matches for the given queries.\r\n         */\r\n        BreakpointObserver.prototype.observe = function (value) {\r\n            var _this = this;\r\n            var queries = splitQueries(coercion.coerceArray(value));\r\n            var observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\r\n            var stateObservable = rxjs.combineLatest(observables);\r\n            // Emit the first state immediately, and then debounce the subsequent emissions.\r\n            stateObservable = rxjs.concat(stateObservable.pipe(operators.take(1)), stateObservable.pipe(operators.skip(1), operators.debounceTime(0)));\r\n            return stateObservable.pipe(operators.map(function (breakpointStates) {\r\n                var response = {\r\n                    matches: false,\r\n                    breakpoints: {},\r\n                };\r\n                breakpointStates.forEach(function (_a) {\r\n                    var matches = _a.matches, query = _a.query;\r\n                    response.matches = response.matches || matches;\r\n                    response.breakpoints[query] = matches;\r\n                });\r\n                return response;\r\n            }));\r\n        };\r\n        /** Registers a specific query to be listened for. */\r\n        BreakpointObserver.prototype._registerQuery = function (query) {\r\n            var _this = this;\r\n            // Only set up a new MediaQueryList if it is not already being listened for.\r\n            if (this._queries.has(query)) {\r\n                return this._queries.get(query);\r\n            }\r\n            var mql = this._mediaMatcher.matchMedia(query);\r\n            // Create callback for match changes and add it is as a listener.\r\n            var queryObservable = new rxjs.Observable(function (observer) {\r\n                // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\r\n                // back into the zone because matchMedia is only included in Zone.js by loading the\r\n                // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\r\n                // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\r\n                // patches it.\r\n                var handler = function (e) { return _this._zone.run(function () { return observer.next(e); }); };\r\n                mql.addListener(handler);\r\n                return function () {\r\n                    mql.removeListener(handler);\r\n                };\r\n            }).pipe(operators.startWith(mql), operators.map(function (_a) {\r\n                var matches = _a.matches;\r\n                return ({ query: query, matches: matches });\r\n            }), operators.takeUntil(this._destroySubject));\r\n            // Add the MediaQueryList to the set of queries.\r\n            var output = { observable: queryObservable, mql: mql };\r\n            this._queries.set(query, output);\r\n            return output;\r\n        };\r\n        return BreakpointObserver;\r\n    }());\r\n    BreakpointObserver.ɵprov = i0.ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\r\n    BreakpointObserver.decorators = [\r\n        { type: i0.Injectable, args: [{ providedIn: 'root' },] }\r\n    ];\r\n    BreakpointObserver.ctorParameters = function () { return [\r\n        { type: MediaMatcher },\r\n        { type: i0.NgZone }\r\n    ]; };\r\n    /**\r\n     * Split each query string into separate query strings if two queries are provided as comma\r\n     * separated.\r\n     */\r\n    function splitQueries(queries) {\r\n        return queries.map(function (query) { return query.split(','); })\r\n            .reduce(function (a1, a2) { return a1.concat(a2); })\r\n            .map(function (query) { return query.trim(); });\r\n    }\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    // PascalCase is being used as Breakpoints is used like an enum.\r\n    // tslint:disable-next-line:variable-name\r\n    var Breakpoints = {\r\n        XSmall: '(max-width: 599.98px)',\r\n        Small: '(min-width: 600px) and (max-width: 959.98px)',\r\n        Medium: '(min-width: 960px) and (max-width: 1279.98px)',\r\n        Large: '(min-width: 1280px) and (max-width: 1919.98px)',\r\n        XLarge: '(min-width: 1920px)',\r\n        Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\r\n            '(max-width: 959.98px) and (orientation: landscape)',\r\n        Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\r\n            '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\r\n        Web: '(min-width: 840px) and (orientation: portrait), ' +\r\n            '(min-width: 1280px) and (orientation: landscape)',\r\n        HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\r\n        TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\r\n        WebPortrait: '(min-width: 840px) and (orientation: portrait)',\r\n        HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\r\n        TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\r\n        WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\r\n    };\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\n\n    /**\r\n     * Generated bundle index. Do not edit.\r\n     */\n\n    exports.BreakpointObserver = BreakpointObserver;\n    exports.Breakpoints = Breakpoints;\n    exports.LayoutModule = LayoutModule;\n    exports.MediaMatcher = MediaMatcher;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-layout.umd.js.map\n"]}