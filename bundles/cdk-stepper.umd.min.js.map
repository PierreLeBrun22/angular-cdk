{"version":3,"sources":["src\\cdk\\cdk-stepper.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","stepper","a11y","bidi","coercion","keycodes","common","core","rxjs","operators","this","CdkStepLabel","CdkStepHeader","_elementRef","prototype","focus","nativeElement","decorators","type","Directive","args","selector","host","role","ctorParameters","ElementRef","template","TemplateRef","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","InjectionToken","MAT_STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","Object","defineProperty","get","set","value","coerceBooleanProperty","enumerable","configurable","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","select","selected","reset","ngOnChanges","_stateChanged","Component","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","CdkStepper","Inject","forwardRef","undefined","Optional","propDecorators","stepLabel","ContentChild","content","ViewChild","static","Input","label","errorMessage","ariaLabel","ariaLabelledby","state","editable","optional","completed","hasError","_dir","_changeDetectorRef","_document","_destroyed","Subject","steps","QueryList","_linear","_selectedIndex","selectionChange","EventEmitter","_orientation","_groupId","index","newIndex","coerceNumberProperty","_steps","_isValidIndex","selectedStep","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","step","indexOf","ngAfterContentInit","_this","changes","pipe","startWith","takeUntil","subscribe","filter","notifyOnChanges","ngAfterViewInit","_keyManager","FocusKeyManager","_stepHeader","withWrap","withHomeAndEnd","withVerticalOrientation","change","of","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","ngOnDestroy","destroy","next","complete","min","length","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","emit","previouslySelectedIndex","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","onKeydown","preventDefault","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","Directionality","ChangeDetectorRef","DOCUMENT","ContentChildren","descendants","linear","Output","CdkStepperNext","_handleClick","[type]","HostListener","CdkStepperModule","CdkStepperPrevious","NgModule","imports","BidiModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/a11y'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('@angular/cdk/keycodes'), require('@angular/common'), require('@angular/core'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/stepper', ['exports', '@angular/cdk/a11y', '@angular/cdk/bidi', '@angular/cdk/coercion', '@angular/cdk/keycodes', '@angular/common', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.stepper = {}), global.ng.cdk.a11y, global.ng.cdk.bidi, global.ng.cdk.coercion, global.ng.cdk.keycodes, global.ng.common, global.ng.core, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, a11y, bidi, coercion, keycodes, common, core, rxjs, operators) { 'use strict';\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var CdkStepHeader = /** @class */ (function () {\r\n        function CdkStepHeader(_elementRef) {\r\n            this._elementRef = _elementRef;\r\n        }\r\n        /** Focuses the step header. */\r\n        CdkStepHeader.prototype.focus = function () {\r\n            this._elementRef.nativeElement.focus();\r\n        };\r\n        return CdkStepHeader;\r\n    }());\r\n    CdkStepHeader.decorators = [\r\n        { type: core.Directive, args: [{\r\n                    selector: '[cdkStepHeader]',\r\n                    host: {\r\n                        'role': 'tab',\r\n                    },\r\n                },] }\r\n    ];\r\n    CdkStepHeader.ctorParameters = function () { return [\r\n        { type: core.ElementRef }\r\n    ]; };\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var CdkStepLabel = /** @class */ (function () {\r\n        function CdkStepLabel(/** @docs-private */ template) {\r\n            this.template = template;\r\n        }\r\n        return CdkStepLabel;\r\n    }());\r\n    CdkStepLabel.decorators = [\r\n        { type: core.Directive, args: [{\r\n                    selector: '[cdkStepLabel]',\r\n                },] }\r\n    ];\r\n    CdkStepLabel.ctorParameters = function () { return [\r\n        { type: core.TemplateRef }\r\n    ]; };\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** Used to generate unique ID for each stepper component. */\r\n    var nextId = 0;\r\n    /** Change event emitted on selection changes. */\r\n    var StepperSelectionEvent = /** @class */ (function () {\r\n        function StepperSelectionEvent() {\r\n        }\r\n        return StepperSelectionEvent;\r\n    }());\r\n    /** Enum to represent the different states of the steps. */\r\n    var STEP_STATE = {\r\n        NUMBER: 'number',\r\n        EDIT: 'edit',\r\n        DONE: 'done',\r\n        ERROR: 'error'\r\n    };\r\n    /** InjectionToken that can be used to specify the global stepper options. */\r\n    var STEPPER_GLOBAL_OPTIONS = new core.InjectionToken('STEPPER_GLOBAL_OPTIONS');\r\n    /**\r\n     * InjectionToken that can be used to specify the global stepper options.\r\n     * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\r\n     * @breaking-change 8.0.0.\r\n     */\r\n    var MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\r\n    var CdkStep = /** @class */ (function () {\r\n        /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\r\n        function CdkStep(_stepper, stepperOptions) {\r\n            this._stepper = _stepper;\r\n            /** Whether user has seen the expanded step content or not. */\r\n            this.interacted = false;\r\n            this._editable = true;\r\n            this._optional = false;\r\n            this._completedOverride = null;\r\n            this._customError = null;\r\n            this._stepperOptions = stepperOptions ? stepperOptions : {};\r\n            this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\r\n            this._showError = !!this._stepperOptions.showError;\r\n        }\r\n        Object.defineProperty(CdkStep.prototype, \"editable\", {\r\n            /** Whether the user can return to this step once it has been marked as completed. */\r\n            get: function () {\r\n                return this._editable;\r\n            },\r\n            set: function (value) {\r\n                this._editable = coercion.coerceBooleanProperty(value);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(CdkStep.prototype, \"optional\", {\r\n            /** Whether the completion of step is optional. */\r\n            get: function () {\r\n                return this._optional;\r\n            },\r\n            set: function (value) {\r\n                this._optional = coercion.coerceBooleanProperty(value);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(CdkStep.prototype, \"completed\", {\r\n            /** Whether step is marked as completed. */\r\n            get: function () {\r\n                return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\r\n            },\r\n            set: function (value) {\r\n                this._completedOverride = coercion.coerceBooleanProperty(value);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        CdkStep.prototype._getDefaultCompleted = function () {\r\n            return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\r\n        };\r\n        Object.defineProperty(CdkStep.prototype, \"hasError\", {\r\n            /** Whether step has an error. */\r\n            get: function () {\r\n                return this._customError == null ? this._getDefaultError() : this._customError;\r\n            },\r\n            set: function (value) {\r\n                this._customError = coercion.coerceBooleanProperty(value);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        CdkStep.prototype._getDefaultError = function () {\r\n            return this.stepControl && this.stepControl.invalid && this.interacted;\r\n        };\r\n        /** Selects this step component. */\r\n        CdkStep.prototype.select = function () {\r\n            this._stepper.selected = this;\r\n        };\r\n        /** Resets the step to its initial state. Note that this includes resetting form data. */\r\n        CdkStep.prototype.reset = function () {\r\n            this.interacted = false;\r\n            if (this._completedOverride != null) {\r\n                this._completedOverride = false;\r\n            }\r\n            if (this._customError != null) {\r\n                this._customError = false;\r\n            }\r\n            if (this.stepControl) {\r\n                this.stepControl.reset();\r\n            }\r\n        };\r\n        CdkStep.prototype.ngOnChanges = function () {\r\n            // Since basically all inputs of the MatStep get proxied through the view down to the\r\n            // underlying MatStepHeader, we have to make sure that change detection runs correctly.\r\n            this._stepper._stateChanged();\r\n        };\r\n        return CdkStep;\r\n    }());\r\n    CdkStep.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'cdk-step',\r\n                    exportAs: 'cdkStep',\r\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\r\n                    encapsulation: core.ViewEncapsulation.None,\r\n                    changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                },] }\r\n    ];\r\n    CdkStep.ctorParameters = function () { return [\r\n        { type: CdkStepper, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return CdkStepper; }),] }] },\r\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\r\n    ]; };\r\n    CdkStep.propDecorators = {\r\n        stepLabel: [{ type: core.ContentChild, args: [CdkStepLabel,] }],\r\n        content: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],\r\n        stepControl: [{ type: core.Input }],\r\n        label: [{ type: core.Input }],\r\n        errorMessage: [{ type: core.Input }],\r\n        ariaLabel: [{ type: core.Input, args: ['aria-label',] }],\r\n        ariaLabelledby: [{ type: core.Input, args: ['aria-labelledby',] }],\r\n        state: [{ type: core.Input }],\r\n        editable: [{ type: core.Input }],\r\n        optional: [{ type: core.Input }],\r\n        completed: [{ type: core.Input }],\r\n        hasError: [{ type: core.Input }]\r\n    };\r\n    var CdkStepper = /** @class */ (function () {\r\n        function CdkStepper(_dir, _changeDetectorRef, \r\n        // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\r\n        _elementRef, _document) {\r\n            this._dir = _dir;\r\n            this._changeDetectorRef = _changeDetectorRef;\r\n            this._elementRef = _elementRef;\r\n            /** Emits when the component is destroyed. */\r\n            this._destroyed = new rxjs.Subject();\r\n            /** Steps that belong to the current stepper, excluding ones from nested steppers. */\r\n            this.steps = new core.QueryList();\r\n            this._linear = false;\r\n            this._selectedIndex = 0;\r\n            /** Event emitted when the selected step has changed. */\r\n            this.selectionChange = new core.EventEmitter();\r\n            this._orientation = 'horizontal';\r\n            this._groupId = nextId++;\r\n            this._document = _document;\r\n        }\r\n        Object.defineProperty(CdkStepper.prototype, \"linear\", {\r\n            /** Whether the validity of previous steps should be checked or not. */\r\n            get: function () {\r\n                return this._linear;\r\n            },\r\n            set: function (value) {\r\n                this._linear = coercion.coerceBooleanProperty(value);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(CdkStepper.prototype, \"selectedIndex\", {\r\n            /** The index of the selected step. */\r\n            get: function () {\r\n                return this._selectedIndex;\r\n            },\r\n            set: function (index) {\r\n                var newIndex = coercion.coerceNumberProperty(index);\r\n                if (this.steps && this._steps) {\r\n                    // Ensure that the index can't be out of bounds.\r\n                    if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\r\n                    }\r\n                    var selectedStep = this.selected;\r\n                    if (selectedStep) {\r\n                        // TODO: this should really be called something like `visited` instead. Just because\r\n                        // the user has seen the step doesn't guarantee that they've interacted with it.\r\n                        selectedStep.interacted = true;\r\n                    }\r\n                    if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\r\n                        (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\r\n                        this._updateSelectedItemIndex(index);\r\n                    }\r\n                }\r\n                else {\r\n                    this._selectedIndex = newIndex;\r\n                }\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(CdkStepper.prototype, \"selected\", {\r\n            /** The step that is selected. */\r\n            get: function () {\r\n                // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\r\n                return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\r\n            },\r\n            set: function (step) {\r\n                this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        CdkStepper.prototype.ngAfterContentInit = function () {\r\n            var _this = this;\r\n            this._steps.changes\r\n                .pipe(operators.startWith(this._steps), operators.takeUntil(this._destroyed))\r\n                .subscribe(function (steps) {\r\n                _this.steps.reset(steps.filter(function (step) { return step._stepper === _this; }));\r\n                _this.steps.notifyOnChanges();\r\n            });\r\n        };\r\n        CdkStepper.prototype.ngAfterViewInit = function () {\r\n            var _this = this;\r\n            // Note that while the step headers are content children by default, any components that\r\n            // extend this one might have them as view children. We initialize the keyboard handling in\r\n            // AfterViewInit so we're guaranteed for both view and content children to be defined.\r\n            this._keyManager = new a11y.FocusKeyManager(this._stepHeader)\r\n                .withWrap()\r\n                .withHomeAndEnd()\r\n                .withVerticalOrientation(this._orientation === 'vertical');\r\n            (this._dir ? this._dir.change : rxjs.of())\r\n                .pipe(operators.startWith(this._layoutDirection()), operators.takeUntil(this._destroyed))\r\n                .subscribe(function (direction) { return _this._keyManager.withHorizontalOrientation(direction); });\r\n            this._keyManager.updateActiveItem(this._selectedIndex);\r\n            // No need to `takeUntil` here, because we're the ones destroying `steps`.\r\n            this.steps.changes.subscribe(function () {\r\n                if (!_this.selected) {\r\n                    _this._selectedIndex = Math.max(_this._selectedIndex - 1, 0);\r\n                }\r\n            });\r\n            // The logic which asserts that the selected index is within bounds doesn't run before the\r\n            // steps are initialized, because we don't how many steps there are yet so we may have an\r\n            // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\r\n            if (!this._isValidIndex(this._selectedIndex)) {\r\n                this._selectedIndex = 0;\r\n            }\r\n        };\r\n        CdkStepper.prototype.ngOnDestroy = function () {\r\n            this.steps.destroy();\r\n            this._destroyed.next();\r\n            this._destroyed.complete();\r\n        };\r\n        /** Selects and focuses the next step in list. */\r\n        CdkStepper.prototype.next = function () {\r\n            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\r\n        };\r\n        /** Selects and focuses the previous step in list. */\r\n        CdkStepper.prototype.previous = function () {\r\n            this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\r\n        };\r\n        /** Resets the stepper to its initial state. Note that this includes clearing form data. */\r\n        CdkStepper.prototype.reset = function () {\r\n            this._updateSelectedItemIndex(0);\r\n            this.steps.forEach(function (step) { return step.reset(); });\r\n            this._stateChanged();\r\n        };\r\n        /** Returns a unique id for each step label element. */\r\n        CdkStepper.prototype._getStepLabelId = function (i) {\r\n            return \"cdk-step-label-\" + this._groupId + \"-\" + i;\r\n        };\r\n        /** Returns unique id for each step content element. */\r\n        CdkStepper.prototype._getStepContentId = function (i) {\r\n            return \"cdk-step-content-\" + this._groupId + \"-\" + i;\r\n        };\r\n        /** Marks the component to be change detected. */\r\n        CdkStepper.prototype._stateChanged = function () {\r\n            this._changeDetectorRef.markForCheck();\r\n        };\r\n        /** Returns position state of the step with the given index. */\r\n        CdkStepper.prototype._getAnimationDirection = function (index) {\r\n            var position = index - this._selectedIndex;\r\n            if (position < 0) {\r\n                return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\r\n            }\r\n            else if (position > 0) {\r\n                return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\r\n            }\r\n            return 'current';\r\n        };\r\n        /** Returns the type of icon to be displayed. */\r\n        CdkStepper.prototype._getIndicatorType = function (index, state) {\r\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\r\n            var step = this.steps.toArray()[index];\r\n            var isCurrentStep = this._isCurrentStep(index);\r\n            return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\r\n                this._getGuidelineLogic(step, isCurrentStep, state);\r\n        };\r\n        CdkStepper.prototype._getDefaultIndicatorLogic = function (step, isCurrentStep) {\r\n            if (step._showError && step.hasError && !isCurrentStep) {\r\n                return STEP_STATE.ERROR;\r\n            }\r\n            else if (!step.completed || isCurrentStep) {\r\n                return STEP_STATE.NUMBER;\r\n            }\r\n            else {\r\n                return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\r\n            }\r\n        };\r\n        CdkStepper.prototype._getGuidelineLogic = function (step, isCurrentStep, state) {\r\n            if (state === void 0) { state = STEP_STATE.NUMBER; }\r\n            if (step._showError && step.hasError && !isCurrentStep) {\r\n                return STEP_STATE.ERROR;\r\n            }\r\n            else if (step.completed && !isCurrentStep) {\r\n                return STEP_STATE.DONE;\r\n            }\r\n            else if (step.completed && isCurrentStep) {\r\n                return state;\r\n            }\r\n            else if (step.editable && isCurrentStep) {\r\n                return STEP_STATE.EDIT;\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        };\r\n        CdkStepper.prototype._isCurrentStep = function (index) {\r\n            return this._selectedIndex === index;\r\n        };\r\n        /** Returns the index of the currently-focused step header. */\r\n        CdkStepper.prototype._getFocusIndex = function () {\r\n            return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\r\n        };\r\n        CdkStepper.prototype._updateSelectedItemIndex = function (newIndex) {\r\n            var stepsArray = this.steps.toArray();\r\n            this.selectionChange.emit({\r\n                selectedIndex: newIndex,\r\n                previouslySelectedIndex: this._selectedIndex,\r\n                selectedStep: stepsArray[newIndex],\r\n                previouslySelectedStep: stepsArray[this._selectedIndex],\r\n            });\r\n            // If focus is inside the stepper, move it to the next header, otherwise it may become\r\n            // lost when the active step content is hidden. We can't be more granular with the check\r\n            // (e.g. checking whether focus is inside the active step), because we don't have a\r\n            // reference to the elements that are rendering out the content.\r\n            this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\r\n                this._keyManager.updateActiveItem(newIndex);\r\n            this._selectedIndex = newIndex;\r\n            this._stateChanged();\r\n        };\r\n        CdkStepper.prototype._onKeydown = function (event) {\r\n            var hasModifier = keycodes.hasModifierKey(event);\r\n            var keyCode = event.keyCode;\r\n            var manager = this._keyManager;\r\n            if (manager.activeItemIndex != null && !hasModifier &&\r\n                (keyCode === keycodes.SPACE || keyCode === keycodes.ENTER)) {\r\n                this.selectedIndex = manager.activeItemIndex;\r\n                event.preventDefault();\r\n            }\r\n            else {\r\n                manager.onKeydown(event);\r\n            }\r\n        };\r\n        CdkStepper.prototype._anyControlsInvalidOrPending = function (index) {\r\n            if (this._linear && index >= 0) {\r\n                return this.steps.toArray().slice(0, index).some(function (step) {\r\n                    var control = step.stepControl;\r\n                    var isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\r\n                    return isIncomplete && !step.optional && !step._completedOverride;\r\n                });\r\n            }\r\n            return false;\r\n        };\r\n        CdkStepper.prototype._layoutDirection = function () {\r\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n        };\r\n        /** Checks whether the stepper contains the focused element. */\r\n        CdkStepper.prototype._containsFocus = function () {\r\n            if (!this._document || !this._elementRef) {\r\n                return false;\r\n            }\r\n            var stepperElement = this._elementRef.nativeElement;\r\n            var focusedElement = this._document.activeElement;\r\n            return stepperElement === focusedElement || stepperElement.contains(focusedElement);\r\n        };\r\n        /** Checks whether the passed-in index is a valid step index. */\r\n        CdkStepper.prototype._isValidIndex = function (index) {\r\n            return index > -1 && (!this.steps || index < this.steps.length);\r\n        };\r\n        return CdkStepper;\r\n    }());\r\n    CdkStepper.decorators = [\r\n        { type: core.Directive, args: [{\r\n                    selector: '[cdkStepper]',\r\n                    exportAs: 'cdkStepper',\r\n                },] }\r\n    ];\r\n    CdkStepper.ctorParameters = function () { return [\r\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\r\n        { type: core.ChangeDetectorRef },\r\n        { type: core.ElementRef },\r\n        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\r\n    ]; };\r\n    CdkStepper.propDecorators = {\r\n        _steps: [{ type: core.ContentChildren, args: [CdkStep, { descendants: true },] }],\r\n        _stepHeader: [{ type: core.ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\r\n        linear: [{ type: core.Input }],\r\n        selectedIndex: [{ type: core.Input }],\r\n        selected: [{ type: core.Input }],\r\n        selectionChange: [{ type: core.Output }]\r\n    };\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /** Button that moves to the next step in a stepper workflow. */\r\n    var CdkStepperNext = /** @class */ (function () {\r\n        function CdkStepperNext(_stepper) {\r\n            this._stepper = _stepper;\r\n            /** Type of the next button. Defaults to \"submit\" if not specified. */\r\n            this.type = 'submit';\r\n        }\r\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\r\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\r\n        // ViewEngine they're overwritten.\r\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\r\n        // tslint:disable-next-line:no-host-decorator-in-concrete\r\n        CdkStepperNext.prototype._handleClick = function () {\r\n            this._stepper.next();\r\n        };\r\n        return CdkStepperNext;\r\n    }());\r\n    CdkStepperNext.decorators = [\r\n        { type: core.Directive, args: [{\r\n                    selector: 'button[cdkStepperNext]',\r\n                    host: {\r\n                        '[type]': 'type',\r\n                    }\r\n                },] }\r\n    ];\r\n    CdkStepperNext.ctorParameters = function () { return [\r\n        { type: CdkStepper }\r\n    ]; };\r\n    CdkStepperNext.propDecorators = {\r\n        type: [{ type: core.Input }],\r\n        _handleClick: [{ type: core.HostListener, args: ['click',] }]\r\n    };\r\n    /** Button that moves to the previous step in a stepper workflow. */\r\n    var CdkStepperPrevious = /** @class */ (function () {\r\n        function CdkStepperPrevious(_stepper) {\r\n            this._stepper = _stepper;\r\n            /** Type of the previous button. Defaults to \"button\" if not specified. */\r\n            this.type = 'button';\r\n        }\r\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\r\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\r\n        // ViewEngine they're overwritten.\r\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\r\n        // tslint:disable-next-line:no-host-decorator-in-concrete\r\n        CdkStepperPrevious.prototype._handleClick = function () {\r\n            this._stepper.previous();\r\n        };\r\n        return CdkStepperPrevious;\r\n    }());\r\n    CdkStepperPrevious.decorators = [\r\n        { type: core.Directive, args: [{\r\n                    selector: 'button[cdkStepperPrevious]',\r\n                    host: {\r\n                        '[type]': 'type',\r\n                    }\r\n                },] }\r\n    ];\r\n    CdkStepperPrevious.ctorParameters = function () { return [\r\n        { type: CdkStepper }\r\n    ]; };\r\n    CdkStepperPrevious.propDecorators = {\r\n        type: [{ type: core.Input }],\r\n        _handleClick: [{ type: core.HostListener, args: ['click',] }]\r\n    };\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var CdkStepperModule = /** @class */ (function () {\r\n        function CdkStepperModule() {\r\n        }\r\n        return CdkStepperModule;\r\n    }());\r\n    CdkStepperModule.decorators = [\r\n        { type: core.NgModule, args: [{\r\n                    imports: [bidi.BidiModule],\r\n                    exports: [\r\n                        CdkStep,\r\n                        CdkStepper,\r\n                        CdkStepHeader,\r\n                        CdkStepLabel,\r\n                        CdkStepperNext,\r\n                        CdkStepperPrevious,\r\n                    ],\r\n                    declarations: [\r\n                        CdkStep,\r\n                        CdkStepper,\r\n                        CdkStepHeader,\r\n                        CdkStepLabel,\r\n                        CdkStepperNext,\r\n                        CdkStepperPrevious,\r\n                    ]\r\n                },] }\r\n    ];\n\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\n\n    /**\r\n     * Generated bundle index. Do not edit.\r\n     */\n\n    exports.CdkStep = CdkStep;\n    exports.CdkStepHeader = CdkStepHeader;\n    exports.CdkStepLabel = CdkStepLabel;\n    exports.CdkStepper = CdkStepper;\n    exports.CdkStepperModule = CdkStepperModule;\n    exports.CdkStepperNext = CdkStepperNext;\n    exports.CdkStepperPrevious = CdkStepperPrevious;\n    exports.MAT_STEPPER_GLOBAL_OPTIONS = MAT_STEPPER_GLOBAL_OPTIONS;\n    exports.STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n    exports.STEP_STATE = STEP_STATE;\n    exports.StepperSelectionEvent = StepperSelectionEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-stepper.umd.js.map\n"]}