{"version":3,"file":"cdk-platform.umd.js","sources":["../../../../../src/cdk/platform/platform.ts","../../../../../src/cdk/platform/platform-module.ts","../../../../../src/cdk/platform/features/input-types.ts","../../../../../src/cdk/platform/features/passive-listeners.ts","../../../../../src/cdk/platform/features/scrolling.ts","../../../../../src/cdk/platform/features/shadow-dom.ts","../../../../../src/cdk/platform/public-api.ts","../../../../../src/cdk/platform/index.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nlet hasV8BreakIterator: boolean;\r\n\r\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\r\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\r\n// the consumer is providing a polyfilled `Map`. See:\r\n// https://github.com/Microsoft/ChakraCore/issues/3189\r\n// https://github.com/angular/components/issues/15687\r\ntry {\r\n  hasV8BreakIterator = (typeof Intl !== 'undefined' && (Intl as any).v8BreakIterator);\r\n} catch {\r\n  hasV8BreakIterator = false;\r\n}\r\n\r\n/**\r\n * Service to detect the current platform by comparing the userAgent strings and\r\n * checking browser-specific global properties.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class Platform {\r\n  // We want to use the Angular platform check because if the Document is shimmed\r\n  // without the navigator, the following checks will fail. This is preferred because\r\n  // sometimes the Document may be shimmed without the user's knowledge or intention\r\n  /** Whether the Angular application is being rendered in the browser. */\r\n  isBrowser: boolean = this._platformId ?\r\n      isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\r\n\r\n  /** Whether the current browser is Microsoft Edge. */\r\n  EDGE: boolean = this.isBrowser && /(edge)/i.test(navigator.userAgent);\r\n\r\n  /** Whether the current rendering engine is Microsoft Trident. */\r\n  TRIDENT: boolean = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n\r\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\r\n  /** Whether the current rendering engine is Blink. */\r\n  BLINK: boolean = this.isBrowser && (!!((window as any).chrome || hasV8BreakIterator) &&\r\n      typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\r\n\r\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\r\n  // ensure that Webkit runs standalone and is not used as another engine's base.\r\n  /** Whether the current rendering engine is WebKit. */\r\n  WEBKIT: boolean = this.isBrowser &&\r\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\r\n\r\n  /** Whether the current platform is Apple iOS. */\r\n  IOS: boolean = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n      !('MSStream' in window);\r\n\r\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\r\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\r\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\r\n  // instead of having an unstable check for Gecko.\r\n  /** Whether the current browser is Firefox. */\r\n  FIREFOX: boolean = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\r\n\r\n  /** Whether the current platform is Android. */\r\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\r\n  ANDROID: boolean = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n\r\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\r\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\r\n  // Safari browser should also use Webkit as its layout engine.\r\n  /** Whether the current browser is Safari. */\r\n  SAFARI: boolean = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\r\n\r\n  constructor(@Inject(PLATFORM_ID) private _platformId: Object) {}\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\n\r\n\r\n@NgModule({})\r\nexport class PlatformModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** Cached result Set of input types support by the current browser. */\r\nlet supportedInputTypes: Set<string>;\r\n\r\n/** Types of `<input>` that *might* be supported. */\r\nconst candidateInputTypes = [\r\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\r\n  // first changing it to something else:\r\n  // The specified value \"\" does not conform to the required format.\r\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\r\n  'color',\r\n  'button',\r\n  'checkbox',\r\n  'date',\r\n  'datetime-local',\r\n  'email',\r\n  'file',\r\n  'hidden',\r\n  'image',\r\n  'month',\r\n  'number',\r\n  'password',\r\n  'radio',\r\n  'range',\r\n  'reset',\r\n  'search',\r\n  'submit',\r\n  'tel',\r\n  'text',\r\n  'time',\r\n  'url',\r\n  'week',\r\n];\r\n\r\n/** @returns The input types supported by this browser. */\r\nexport function getSupportedInputTypes(): Set<string> {\r\n  // Result is cached.\r\n  if (supportedInputTypes) {\r\n    return supportedInputTypes;\r\n  }\r\n\r\n  // We can't check if an input type is not supported until we're on the browser, so say that\r\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\r\n  // just a helper function and can't inject it.\r\n  if (typeof document !== 'object' || !document) {\r\n    supportedInputTypes = new Set(candidateInputTypes);\r\n    return supportedInputTypes;\r\n  }\r\n\r\n  let featureTestInput = document.createElement('input');\r\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\r\n    featureTestInput.setAttribute('type', value);\r\n    return featureTestInput.type === value;\r\n  }));\r\n\r\n  return supportedInputTypes;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** Cached result of whether the user's browser supports passive event listeners. */\r\nlet supportsPassiveEvents: boolean;\r\n\r\n/**\r\n * Checks whether the user's browser supports passive event listeners.\r\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n */\r\nexport function supportsPassiveEventListeners(): boolean {\r\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\r\n    try {\r\n      window.addEventListener('test', null!, Object.defineProperty({}, 'passive', {\r\n        get: () => supportsPassiveEvents = true\r\n      }));\r\n    } finally {\r\n      supportsPassiveEvents = supportsPassiveEvents || false;\r\n    }\r\n  }\r\n\r\n  return supportsPassiveEvents;\r\n}\r\n\r\n/**\r\n * Normalizes an `AddEventListener` object to something that can be passed\r\n * to `addEventListener` on any browser, no matter whether it supports the\r\n * `options` parameter.\r\n * @param options Object to be normalized.\r\n */\r\nexport function normalizePassiveListenerOptions(options: AddEventListenerOptions):\r\n  AddEventListenerOptions | boolean {\r\n  return supportsPassiveEventListeners() ? options : !!options.capture;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\r\nexport const enum RtlScrollAxisType {\r\n  /**\r\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\r\n   * all the way right.\r\n   */\r\n  NORMAL,\r\n  /**\r\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\r\n   * all the way right.\r\n   */\r\n  NEGATED,\r\n  /**\r\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\r\n   * all the way right.\r\n   */\r\n  INVERTED\r\n}\r\n\r\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\r\nlet rtlScrollAxisType: RtlScrollAxisType|undefined;\r\n\r\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\r\nlet scrollBehaviorSupported: boolean|undefined;\r\n\r\n/** Check whether the browser supports scroll behaviors. */\r\nexport function supportsScrollBehavior(): boolean {\r\n  if (scrollBehaviorSupported == null) {\r\n    // If we're not in the browser, it can't be supported. Also check for `Element`, because\r\n    // some projects stub out the global `document` during SSR which can throw us off.\r\n    if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\r\n      scrollBehaviorSupported = false;\r\n      return scrollBehaviorSupported;\r\n    }\r\n\r\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\r\n    if ('scrollBehavior' in document.documentElement!.style) {\r\n      scrollBehaviorSupported = true;\r\n    } else {\r\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\r\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\r\n      const scrollToFunction: Function|undefined = Element.prototype.scrollTo;\r\n\r\n      if (scrollToFunction) {\r\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\r\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\r\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\r\n        // polyfilled functions as supporting scroll behavior.\r\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\r\n      } else {\r\n        scrollBehaviorSupported = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return scrollBehaviorSupported;\r\n}\r\n\r\n/**\r\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\r\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\r\n */\r\nexport function getRtlScrollAxisType(): RtlScrollAxisType {\r\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\r\n  if (typeof document !== 'object' || !document) {\r\n    return RtlScrollAxisType.NORMAL;\r\n  }\r\n\r\n  if (rtlScrollAxisType == null) {\r\n    // Create a 1px wide scrolling container and a 2px wide content element.\r\n    const scrollContainer = document.createElement('div');\r\n    const containerStyle = scrollContainer.style;\r\n    scrollContainer.dir = 'rtl';\r\n    containerStyle.width = '1px';\r\n    containerStyle.overflow = 'auto';\r\n    containerStyle.visibility = 'hidden';\r\n    containerStyle.pointerEvents = 'none';\r\n    containerStyle.position = 'absolute';\r\n\r\n    const content = document.createElement('div');\r\n    const contentStyle = content.style;\r\n    contentStyle.width = '2px';\r\n    contentStyle.height = '1px';\r\n\r\n    scrollContainer.appendChild(content);\r\n    document.body.appendChild(scrollContainer);\r\n\r\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\r\n\r\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\r\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\r\n    // dealing with one of the other two types of browsers.\r\n    if (scrollContainer.scrollLeft === 0) {\r\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\r\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\r\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\r\n      // return 0 when we read it again.\r\n      scrollContainer.scrollLeft = 1;\r\n      rtlScrollAxisType =\r\n          scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\r\n    }\r\n\r\n    scrollContainer.parentNode!.removeChild(scrollContainer);\r\n  }\r\n  return rtlScrollAxisType;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nlet shadowDomIsSupported: boolean;\r\n\r\n/** Checks whether the user's browser support Shadow DOM. */\r\nexport function _supportsShadowDom(): boolean {\r\n  if (shadowDomIsSupported == null) {\r\n    const head = typeof document !== 'undefined' ? document.head : null;\r\n    shadowDomIsSupported = !!(head && ((head as any).createShadowRoot || head.attachShadow));\r\n  }\r\n\r\n  return shadowDomIsSupported;\r\n}\r\n\r\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\r\nexport function _getShadowRoot(element: HTMLElement): ShadowRoot | null {\r\n  if (_supportsShadowDom()) {\r\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\r\n\r\n    // Note that this should be caught by `_supportsShadowDom`, but some\r\n    // teams have been able to hit this code path on unsupported browsers.\r\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\r\n      return rootNode;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport * from './platform';\r\nexport * from './platform-module';\r\nexport * from './features/input-types';\r\nexport * from './features/passive-listeners';\r\nexport * from './features/scrolling';\r\nexport * from './features/shadow-dom';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["isPlatformBrowser","Injectable","Inject","PLATFORM_ID","NgModule"],"mappings":"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"}