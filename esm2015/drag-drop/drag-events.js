/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1ldmVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvY2RrL2RyYWctZHJvcC9kcmFnLWV2ZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUciLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7Q2RrRHJhZ30gZnJvbSAnLi9kaXJlY3RpdmVzL2RyYWcnO1xyXG5pbXBvcnQge0Nka0Ryb3BMaXN0fSBmcm9tICcuL2RpcmVjdGl2ZXMvZHJvcC1saXN0JztcclxuXHJcbi8qKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIHVzZXIgc3RhcnRzIGRyYWdnaW5nIGEgZHJhZ2dhYmxlLiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdTdGFydDxUID0gYW55PiB7XHJcbiAgLyoqIERyYWdnYWJsZSB0aGF0IGVtaXR0ZWQgdGhlIGV2ZW50LiAqL1xyXG4gIHNvdXJjZTogQ2RrRHJhZzxUPjtcclxufVxyXG5cclxuLyoqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgdXNlciByZWxlYXNlcyBhbiBpdGVtLCBiZWZvcmUgYW55IGFuaW1hdGlvbnMgaGF2ZSBzdGFydGVkLiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdSZWxlYXNlPFQgPSBhbnk+IHtcclxuICAvKiogRHJhZ2dhYmxlIHRoYXQgZW1pdHRlZCB0aGUgZXZlbnQuICovXHJcbiAgc291cmNlOiBDZGtEcmFnPFQ+O1xyXG59XHJcblxyXG4vKiogRXZlbnQgZW1pdHRlZCB3aGVuIHRoZSB1c2VyIHN0b3BzIGRyYWdnaW5nIGEgZHJhZ2dhYmxlLiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdFbmQ8VCA9IGFueT4ge1xyXG4gIC8qKiBEcmFnZ2FibGUgdGhhdCBlbWl0dGVkIHRoZSBldmVudC4gKi9cclxuICBzb3VyY2U6IENka0RyYWc8VD47XHJcbiAgLyoqIERpc3RhbmNlIGluIHBpeGVscyB0aGF0IHRoZSB1c2VyIGhhcyBkcmFnZ2VkIHNpbmNlIHRoZSBkcmFnIHNlcXVlbmNlIHN0YXJ0ZWQuICovXHJcbiAgZGlzdGFuY2U6IHt4OiBudW1iZXIsIHk6IG51bWJlcn07XHJcbn1cclxuXHJcbi8qKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIHVzZXIgbW92ZXMgYW4gaXRlbSBpbnRvIGEgbmV3IGRyb3AgY29udGFpbmVyLiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdFbnRlcjxUID0gYW55LCBJID0gVD4ge1xyXG4gIC8qKiBDb250YWluZXIgaW50byB3aGljaCB0aGUgdXNlciBoYXMgbW92ZWQgdGhlIGl0ZW0uICovXHJcbiAgY29udGFpbmVyOiBDZGtEcm9wTGlzdDxUPjtcclxuICAvKiogSXRlbSB0aGF0IHdhcyBtb3ZlZCBpbnRvIHRoZSBjb250YWluZXIuICovXHJcbiAgaXRlbTogQ2RrRHJhZzxJPjtcclxuICAvKiogSW5kZXggYXQgd2hpY2ggdGhlIGl0ZW0gaGFzIGVudGVyZWQgdGhlIGNvbnRhaW5lci4gKi9cclxuICBjdXJyZW50SW5kZXg6IG51bWJlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgdXNlciByZW1vdmVzIGFuIGl0ZW0gZnJvbSBhXHJcbiAqIGRyb3AgY29udGFpbmVyIGJ5IG1vdmluZyBpdCBpbnRvIGFub3RoZXIgb25lLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBDZGtEcmFnRXhpdDxUID0gYW55LCBJID0gVD4ge1xyXG4gIC8qKiBDb250YWluZXIgZnJvbSB3aGljaCB0aGUgdXNlciBoYXMgYSByZW1vdmVkIGFuIGl0ZW0uICovXHJcbiAgY29udGFpbmVyOiBDZGtEcm9wTGlzdDxUPjtcclxuICAvKiogSXRlbSB0aGF0IHdhcyByZW1vdmVkIGZyb20gdGhlIGNvbnRhaW5lci4gKi9cclxuICBpdGVtOiBDZGtEcmFnPEk+O1xyXG59XHJcblxyXG5cclxuLyoqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgdXNlciBkcm9wcyBhIGRyYWdnYWJsZSBpdGVtIGluc2lkZSBhIGRyb3AgY29udGFpbmVyLiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdEcm9wPFQsIE8gPSBUPiB7XHJcbiAgLyoqIEluZGV4IG9mIHRoZSBpdGVtIHdoZW4gaXQgd2FzIHBpY2tlZCB1cC4gKi9cclxuICBwcmV2aW91c0luZGV4OiBudW1iZXI7XHJcbiAgLyoqIEN1cnJlbnQgaW5kZXggb2YgdGhlIGl0ZW0uICovXHJcbiAgY3VycmVudEluZGV4OiBudW1iZXI7XHJcbiAgLyoqIEl0ZW0gdGhhdCBpcyBiZWluZyBkcm9wcGVkLiAqL1xyXG4gIGl0ZW06IENka0RyYWc7XHJcbiAgLyoqIENvbnRhaW5lciBpbiB3aGljaCB0aGUgaXRlbSB3YXMgZHJvcHBlZC4gKi9cclxuICBjb250YWluZXI6IENka0Ryb3BMaXN0PFQ+O1xyXG4gIC8qKiBDb250YWluZXIgZnJvbSB3aGljaCB0aGUgaXRlbSB3YXMgcGlja2VkIHVwLiBDYW4gYmUgdGhlIHNhbWUgYXMgdGhlIGBjb250YWluZXJgLiAqL1xyXG4gIHByZXZpb3VzQ29udGFpbmVyOiBDZGtEcm9wTGlzdDxPPjtcclxuICAvKiogV2hldGhlciB0aGUgdXNlcidzIHBvaW50ZXIgd2FzIG92ZXIgdGhlIGNvbnRhaW5lciB3aGVuIHRoZSBpdGVtIHdhcyBkcm9wcGVkLiAqL1xyXG4gIGlzUG9pbnRlck92ZXJDb250YWluZXI6IGJvb2xlYW47XHJcbiAgLyoqIERpc3RhbmNlIGluIHBpeGVscyB0aGF0IHRoZSB1c2VyIGhhcyBkcmFnZ2VkIHNpbmNlIHRoZSBkcmFnIHNlcXVlbmNlIHN0YXJ0ZWQuICovXHJcbiAgZGlzdGFuY2U6IHt4OiBudW1iZXIsIHk6IG51bWJlcn07XHJcbn1cclxuXHJcbi8qKiBFdmVudCBlbWl0dGVkIGFzIHRoZSB1c2VyIGlzIGRyYWdnaW5nIGEgZHJhZ2dhYmxlIGl0ZW0uICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2RrRHJhZ01vdmU8VCA9IGFueT4ge1xyXG4gIC8qKiBJdGVtIHRoYXQgaXMgYmVpbmcgZHJhZ2dlZC4gKi9cclxuICBzb3VyY2U6IENka0RyYWc8VD47XHJcbiAgLyoqIFBvc2l0aW9uIG9mIHRoZSB1c2VyJ3MgcG9pbnRlciBvbiB0aGUgcGFnZS4gKi9cclxuICBwb2ludGVyUG9zaXRpb246IHt4OiBudW1iZXIsIHk6IG51bWJlcn07XHJcbiAgLyoqIE5hdGl2ZSBldmVudCB0aGF0IGlzIGNhdXNpbmcgdGhlIGRyYWdnaW5nLiAqL1xyXG4gIGV2ZW50OiBNb3VzZUV2ZW50IHwgVG91Y2hFdmVudDtcclxuICAvKiogRGlzdGFuY2UgaW4gcGl4ZWxzIHRoYXQgdGhlIHVzZXIgaGFzIGRyYWdnZWQgc2luY2UgdGhlIGRyYWcgc2VxdWVuY2Ugc3RhcnRlZC4gKi9cclxuICBkaXN0YW5jZToge3g6IG51bWJlciwgeTogbnVtYmVyfTtcclxuICAvKipcclxuICAgKiBJbmRpY2F0ZXMgdGhlIGRpcmVjdGlvbiBpbiB3aGljaCB0aGUgdXNlciBpcyBkcmFnZ2luZyB0aGUgZWxlbWVudCBhbG9uZyBlYWNoIGF4aXMuXHJcbiAgICogYDFgIG1lYW5zIHRoYXQgdGhlIHBvc2l0aW9uIGlzIGluY3JlYXNpbmcgKGUuZy4gdGhlIHVzZXIgaXMgbW92aW5nIHRvIHRoZSByaWdodCBvciBkb3dud2FyZHMpLFxyXG4gICAqIHdoZXJlYXMgYC0xYCBtZWFucyB0aGF0IGl0J3MgZGVjcmVhc2luZyAodGhleSdyZSBtb3ZpbmcgdG8gdGhlIGxlZnQgb3IgdXB3YXJkcykuIGAwYCBtZWFuc1xyXG4gICAqIHRoYXQgdGhlIHBvc2l0aW9uIGhhc24ndCBjaGFuZ2VkLlxyXG4gICAqL1xyXG4gIGRlbHRhOiB7eDogLTEgfCAwIHwgMSwgeTogLTEgfCAwIHwgMX07XHJcbn1cclxuXHJcbi8qKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIHVzZXIgc3dhcHMgdGhlIHBvc2l0aW9uIG9mIHR3byBkcmFnIGl0ZW1zLiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIENka0RyYWdTb3J0RXZlbnQ8VCA9IGFueSwgSSA9IFQ+IHtcclxuICAvKiogSW5kZXggZnJvbSB3aGljaCB0aGUgaXRlbSB3YXMgc29ydGVkIHByZXZpb3VzbHkuICovXHJcbiAgcHJldmlvdXNJbmRleDogbnVtYmVyO1xyXG4gIC8qKiBJbmRleCB0aGF0IHRoZSBpdGVtIGlzIGN1cnJlbnRseSBpbi4gKi9cclxuICBjdXJyZW50SW5kZXg6IG51bWJlcjtcclxuICAvKiogQ29udGFpbmVyIHRoYXQgdGhlIGl0ZW0gYmVsb25ncyB0by4gKi9cclxuICBjb250YWluZXI6IENka0Ryb3BMaXN0PFQ+O1xyXG4gIC8qKiBJdGVtIHRoYXQgaXMgYmVpbmcgc29ydGVkLiAqL1xyXG4gIGl0ZW06IENka0RyYWc8ST47XHJcbn1cclxuIl19