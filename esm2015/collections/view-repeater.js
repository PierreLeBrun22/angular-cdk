/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { InjectionToken } from '@angular/core';
/**
 * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.
 * @docs-private
 */
export const _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy1yZXBlYXRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jZGsvY29sbGVjdGlvbnMvdmlldy1yZXBlYXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQ0wsY0FBYyxFQUtmLE1BQU0sZUFBZSxDQUFDO0FBb0d2Qjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxJQUFJLGNBQWMsQ0FDbUIsZUFBZSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7XHJcbiAgSW5qZWN0aW9uVG9rZW4sXHJcbiAgSXRlcmFibGVDaGFuZ2VSZWNvcmQsXHJcbiAgSXRlcmFibGVDaGFuZ2VzLFxyXG4gIFRlbXBsYXRlUmVmLFxyXG4gIFZpZXdDb250YWluZXJSZWZcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBUaGUgY29udGV4dCBmb3IgYW4gZW1iZWRkZWQgdmlldyBpbiB0aGUgcmVwZWF0ZXIncyB2aWV3IGNvbnRhaW5lci5cclxuICpcclxuICogQHRlbXBsYXRlIFQgVGhlIHR5cGUgZm9yIHRoZSBlbWJlZGRlZCB2aWV3J3MgJGltcGxpY2l0IHByb3BlcnR5LlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBfVmlld1JlcGVhdGVySXRlbUNvbnRleHQ8VD4ge1xyXG4gICRpbXBsaWNpdD86IFQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgYXJndW1lbnRzIG5lZWRlZCB0byBjb25zdHJ1Y3QgYW4gZW1iZWRkZWQgdmlldyBmb3IgYW4gaXRlbSBpbiBhIHZpZXdcclxuICogY29udGFpbmVyLlxyXG4gKlxyXG4gKiBAdGVtcGxhdGUgQyBUaGUgdHlwZSBmb3IgdGhlIGNvbnRleHQgcGFzc2VkIHRvIGVhY2ggZW1iZWRkZWQgdmlldy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgX1ZpZXdSZXBlYXRlckl0ZW1JbnNlcnRBcmdzPEM+IHtcclxuICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8Qz47XHJcbiAgY29udGV4dD86IEM7XHJcbiAgaW5kZXg/OiBudW1iZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBIGZhY3RvcnkgdGhhdCBkZXJpdmVzIHRoZSBlbWJlZGRlZCB2aWV3IGNvbnRleHQgZm9yIGFuIGl0ZW0gaW4gYSB2aWV3XHJcbiAqIGNvbnRhaW5lci5cclxuICpcclxuICogQHRlbXBsYXRlIFQgVGhlIHR5cGUgZm9yIHRoZSBlbWJlZGRlZCB2aWV3J3MgJGltcGxpY2l0IHByb3BlcnR5LlxyXG4gKiBAdGVtcGxhdGUgUiBUaGUgdHlwZSBmb3IgdGhlIGl0ZW0gaW4gZWFjaCBJdGVyYWJsZURpZmZlciBjaGFuZ2UgcmVjb3JkLlxyXG4gKiBAdGVtcGxhdGUgQyBUaGUgdHlwZSBmb3IgdGhlIGNvbnRleHQgcGFzc2VkIHRvIGVhY2ggZW1iZWRkZWQgdmlldy5cclxuICovXHJcbmV4cG9ydCB0eXBlIF9WaWV3UmVwZWF0ZXJJdGVtQ29udGV4dEZhY3Rvcnk8VCwgUiwgQyBleHRlbmRzIF9WaWV3UmVwZWF0ZXJJdGVtQ29udGV4dDxUPj4gPVxyXG4gICAgKHJlY29yZDogSXRlcmFibGVDaGFuZ2VSZWNvcmQ8Uj4sXHJcbiAgICAgYWRqdXN0ZWRQcmV2aW91c0luZGV4OiBudW1iZXIgfCBudWxsLFxyXG4gICAgIGN1cnJlbnRJbmRleDogbnVtYmVyIHwgbnVsbCkgPT4gX1ZpZXdSZXBlYXRlckl0ZW1JbnNlcnRBcmdzPEM+O1xyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3RzIHRoZSB2YWx1ZSBvZiBhbiBpdGVtIGZyb20gYW4ge0BsaW5rIEl0ZXJhYmxlQ2hhbmdlUmVjb3JkfS5cclxuICpcclxuICogQHRlbXBsYXRlIFQgVGhlIHR5cGUgZm9yIHRoZSBlbWJlZGRlZCB2aWV3J3MgJGltcGxpY2l0IHByb3BlcnR5LlxyXG4gKiBAdGVtcGxhdGUgUiBUaGUgdHlwZSBmb3IgdGhlIGl0ZW0gaW4gZWFjaCBJdGVyYWJsZURpZmZlciBjaGFuZ2UgcmVjb3JkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgX1ZpZXdSZXBlYXRlckl0ZW1WYWx1ZVJlc29sdmVyPFQsIFI+ID1cclxuICAgIChyZWNvcmQ6IEl0ZXJhYmxlQ2hhbmdlUmVjb3JkPFI+KSA9PiBUO1xyXG5cclxuLyoqIEluZGljYXRlcyBob3cgYSB2aWV3IHdhcyBjaGFuZ2VkIGJ5IGEge0BsaW5rIF9WaWV3UmVwZWF0ZXJ9LiAqL1xyXG5leHBvcnQgY29uc3QgZW51bSBfVmlld1JlcGVhdGVyT3BlcmF0aW9uIHtcclxuICAvKiogVGhlIGNvbnRlbnQgb2YgYW4gZXhpc3RpbmcgdmlldyB3YXMgcmVwbGFjZWQgd2l0aCBhbm90aGVyIGl0ZW0uICovXHJcbiAgUkVQTEFDRUQsXHJcbiAgLyoqIEEgbmV3IHZpZXcgd2FzIGNyZWF0ZWQgd2l0aCBgY3JlYXRlRW1iZWRkZWRWaWV3YC4gKi9cclxuICBJTlNFUlRFRCxcclxuICAvKiogVGhlIHBvc2l0aW9uIG9mIGEgdmlldyBjaGFuZ2VkLCBidXQgdGhlIGNvbnRlbnQgcmVtYWlucyB0aGUgc2FtZS4gKi9cclxuICBNT1ZFRCxcclxuICAvKiogQSB2aWV3IHdhcyBkZXRhY2hlZCBmcm9tIHRoZSB2aWV3IGNvbnRhaW5lci4gKi9cclxuICBSRU1PVkVELFxyXG59XHJcblxyXG4vKipcclxuICogTWV0YSBkYXRhIGRlc2NyaWJpbmcgdGhlIHN0YXRlIG9mIGEgdmlldyBhZnRlciBpdCB3YXMgdXBkYXRlZCBieSBhXHJcbiAqIHtAbGluayBfVmlld1JlcGVhdGVyfS5cclxuICpcclxuICogQHRlbXBsYXRlIFIgVGhlIHR5cGUgZm9yIHRoZSBpdGVtIGluIGVhY2ggSXRlcmFibGVEaWZmZXIgY2hhbmdlIHJlY29yZC5cclxuICogQHRlbXBsYXRlIEMgVGhlIHR5cGUgZm9yIHRoZSBjb250ZXh0IHBhc3NlZCB0byBlYWNoIGVtYmVkZGVkIHZpZXcuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIF9WaWV3UmVwZWF0ZXJJdGVtQ2hhbmdlPFIsIEM+IHtcclxuICAvKiogVGhlIHZpZXcncyBjb250ZXh0IGFmdGVyIGl0IHdhcyBjaGFuZ2VkLiAqL1xyXG4gIGNvbnRleHQ/OiBDO1xyXG4gIC8qKiBJbmRpY2F0ZXMgaG93IHRoZSB2aWV3IHdhcyBjaGFuZ2VkLiAqL1xyXG4gIG9wZXJhdGlvbjogX1ZpZXdSZXBlYXRlck9wZXJhdGlvbjtcclxuICAvKiogVGhlIHZpZXcncyBjb3JyZXNwb25kaW5nIGNoYW5nZSByZWNvcmQuICovXHJcbiAgcmVjb3JkOiBJdGVyYWJsZUNoYW5nZVJlY29yZDxSPjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFR5cGUgZm9yIGEgY2FsbGJhY2sgdG8gYmUgZXhlY3V0ZWQgYWZ0ZXIgYSB2aWV3IGhhcyBjaGFuZ2VkLlxyXG4gKlxyXG4gKiBAdGVtcGxhdGUgUiBUaGUgdHlwZSBmb3IgdGhlIGl0ZW0gaW4gZWFjaCBJdGVyYWJsZURpZmZlciBjaGFuZ2UgcmVjb3JkLlxyXG4gKiBAdGVtcGxhdGUgQyBUaGUgdHlwZSBmb3IgdGhlIGNvbnRleHQgcGFzc2VkIHRvIGVhY2ggZW1iZWRkZWQgdmlldy5cclxuICovXHJcbmV4cG9ydCB0eXBlIF9WaWV3UmVwZWF0ZXJJdGVtQ2hhbmdlZDxSLCBDPiA9XHJcbiAgICAoY2hhbmdlOiBfVmlld1JlcGVhdGVySXRlbUNoYW5nZTxSLCBDPikgPT4gdm9pZDtcclxuXHJcbi8qKlxyXG4gKiBEZXNjcmliZXMgYSBzdHJhdGVneSBmb3IgcmVuZGVyaW5nIGl0ZW1zIGluIGEge0BsaW5rIFZpZXdDb250YWluZXJSZWZ9LlxyXG4gKlxyXG4gKiBAdGVtcGxhdGUgVCBUaGUgdHlwZSBmb3IgdGhlIGVtYmVkZGVkIHZpZXcncyAkaW1wbGljaXQgcHJvcGVydHkuXHJcbiAqIEB0ZW1wbGF0ZSBSIFRoZSB0eXBlIGZvciB0aGUgaXRlbSBpbiBlYWNoIEl0ZXJhYmxlRGlmZmVyIGNoYW5nZSByZWNvcmQuXHJcbiAqIEB0ZW1wbGF0ZSBDIFRoZSB0eXBlIGZvciB0aGUgY29udGV4dCBwYXNzZWQgdG8gZWFjaCBlbWJlZGRlZCB2aWV3LlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBfVmlld1JlcGVhdGVyPFQsIFIsIEMgZXh0ZW5kcyBfVmlld1JlcGVhdGVySXRlbUNvbnRleHQ8VD4+IHtcclxuICBhcHBseUNoYW5nZXMoXHJcbiAgICAgIGNoYW5nZXM6IEl0ZXJhYmxlQ2hhbmdlczxSPixcclxuICAgICAgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZixcclxuICAgICAgaXRlbUNvbnRleHRGYWN0b3J5OiBfVmlld1JlcGVhdGVySXRlbUNvbnRleHRGYWN0b3J5PFQsIFIsIEM+LFxyXG4gICAgICBpdGVtVmFsdWVSZXNvbHZlcjogX1ZpZXdSZXBlYXRlckl0ZW1WYWx1ZVJlc29sdmVyPFQsIFI+LFxyXG4gICAgICBpdGVtVmlld0NoYW5nZWQ/OiBfVmlld1JlcGVhdGVySXRlbUNoYW5nZWQ8UiwgQz4pOiB2b2lkO1xyXG5cclxuICBkZXRhY2goKTogdm9pZDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEluamVjdGlvbiB0b2tlbiBmb3Ige0BsaW5rIF9WaWV3UmVwZWF0ZXJ9LiBUaGlzIHRva2VuIGlzIGZvciB1c2UgYnkgQW5ndWxhciBNYXRlcmlhbCBvbmx5LlxyXG4gKiBAZG9jcy1wcml2YXRlXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgX1ZJRVdfUkVQRUFURVJfU1RSQVRFR1kgPSBuZXcgSW5qZWN0aW9uVG9rZW48XHJcbiAgICAgICAgX1ZpZXdSZXBlYXRlcjx1bmtub3duLCB1bmtub3duLCBfVmlld1JlcGVhdGVySXRlbUNvbnRleHQ8dW5rbm93bj4+PignX1ZpZXdSZXBlYXRlcicpO1xyXG4iXX0=